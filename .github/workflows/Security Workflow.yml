name: Security Workflow
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  gitleaks:
    name: Run Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml  
          fail: true  
          report-format: json
          report-path: gitleaks-report.json
      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft --version  # Verificar la instalación

      - name: Generate SBOM (CycloneDX Format)
        run: |
          syft dir:. -o spdx-json > sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          retention-days: 7
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Run Juice Shop
        run: |
          git clone https://github.com/juice-shop/juice-shop.git
          cd juice-shop
          docker build -t juice-shop .
          docker run -d -p 3000:3000 --name juice-shop juice-shop
          sleep 10  # Espera a que el servicio se inicie
          curl -I http://localhost:3000 || (echo "Juice Shop no está corriendo" && exit 1)

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Stop and Remove Container
        if: always()
        run: docker stop juice-shop && docker rm juice-shop
